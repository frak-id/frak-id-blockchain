{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6261E4a478C98419EaFa6289509C49058D21Df8c",
      "txHash": "0x71516445e1eada6fa8c286ea52f1b999e670c74911309785e5bbdcdbbb0c31d8",
      "kind": "uups"
    },
    {
      "address": "0xCD550f3eFF6d2bA94d8A106bE3c0fE46D5D38bDe",
      "txHash": "0x317b42f8b8f7b15941ef7f66f9801a6c6ef723747cd4951e34cc53cb7b5b6929",
      "kind": "uups"
    },
    {
      "address": "0xb8D79C7Bca3994dd5B4A80AD1c088CEBCd01f7F6",
      "txHash": "0x86eae2d4a20dc8306c6110ee26467a844d49d25239080c26ddd8e5d8b128b30e",
      "kind": "uups"
    },
    {
      "address": "0x4B1611803687Ab821E1b670fE94CB93303D94F8a",
      "txHash": "0x7dd0e7ed8c60d253b37346e9a2e78762c9ccf3d7c84be27968ced92199f16095",
      "kind": "uups"
    },
    {
      "address": "0x166d8CFEe1919bC2e8c7AdBB34F1613194e9C599",
      "txHash": "0xcd3edc8dff23260106d95edcfc7aabeb57bdcd3c9d2c749aca689bd44df289ad",
      "kind": "uups"
    },
    {
      "address": "0xDCB34659B83C4F8708fd7AcAA3755547BF8BBcA0",
      "txHash": "0xaf1e0c94e4ac7d424313eb1f5c5cbb8d06fb5cf8d96a432b97ddd349c5cb7dca",
      "kind": "uups"
    },
    {
      "address": "0x8D9fa601DA1416b087E9db6B6EaD63D4920A4528",
      "txHash": "0x278c82b2eaaaf2ba9fd168ad4a30d883fc479e2bf9c53b71aafe175ac1724155",
      "kind": "uups"
    },
    {
      "address": "0x1adc8CAaA35551730eCd82e0eEA683Aa90dB6cf0",
      "txHash": "0xc74f16f84958231bac734639fac3b55aa59bd76102447fce8e82a78846ebde33",
      "kind": "uups"
    },
    {
      "address": "0x7053f61CEA3B7C3b5f0e14de6eEdB01cA1850408",
      "txHash": "0x968129984046a24bd5eaf4f7540c7e4a9edecf872b5c07cf56b994d9cb13bf53",
      "kind": "uups"
    }
  ],
  "impls": {
    "9968bdbd82e69a7107981511c1a5cdeb2b17bd5b7f2894f5fb0028d686cf342b": {
      "address": "0x2d51eEef169a8e2B175E09917A8e5C09370C7E0E",
      "txHash": "0x1d605d1baac73e19da4a9a6fd9a1719e4d10352d3e12fad197423ba8e8dd6056",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "203",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/utils/EIP712Base.sol:18"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeMetaTransaction",
            "src": "contracts/utils/NativeMetaTransaction.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b5199edd6743923f9f9f71b9576397ef147c9c690ac7712a3de35ecca316441": {
      "address": "0x4A5F3E69547cbfFe13B13126488539af0c13E8c8",
      "txHash": "0xd95c331a765ba66ce5b34f829cf4a92dc67fbaf5496ed1348f92726e157eaede",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint96",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:64"
          },
          {
            "label": "token",
            "offset": 12,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:67"
          },
          {
            "label": "_idCounter",
            "offset": 0,
            "slot": "154",
            "type": "t_uint24",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:70"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Vesting)10085_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:73"
          },
          {
            "label": "owned",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(UintSet)4073_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)4073_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Vesting)10085_storage)": {
            "label": "mapping(uint256 => struct MultiVestingWallets.Vesting)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)3601_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4073_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3601_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Vesting)10085_storage": {
            "label": "struct MultiVestingWallets.Vesting",
            "members": [
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "released",
                "type": "t_uint96",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "id",
                "type": "t_uint24",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "startDate",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "beneficiary",
                "type": "t_address",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "1f216d756807dcb86f862a3137b99ad65a4214afda08f7578dfefd5c525e8e02": {
      "address": "0x0040902c26495a8Bf942dfdf2b3A132d41Ec3948",
      "txHash": "0xa95b34324d723e65acc6f1a954db1eb96b1b898e854ecbcb7f96da60a4f5866a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:40"
          },
          {
            "label": "totalGroupCap",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "VestingWalletFactory",
            "src": "contracts/wallets/VestingWalletFactory.sol:33"
          },
          {
            "label": "multiVestingWallets",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(MultiVestingWallets)10692",
            "contract": "VestingWalletFactory",
            "src": "contracts/wallets/VestingWalletFactory.sol:38"
          },
          {
            "label": "vestingGroup",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint8,t_struct(VestingGroup)10722_storage)",
            "contract": "VestingWalletFactory",
            "src": "contracts/wallets/VestingWalletFactory.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(MultiVestingWallets)10692": {
            "label": "contract MultiVestingWallets",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(VestingGroup)10722_storage)": {
            "label": "mapping(uint8 => struct VestingWalletFactory.VestingGroup)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingGroup)10722_storage": {
            "label": "struct VestingWalletFactory.VestingGroup",
            "members": [
              {
                "label": "rewardCap",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint96",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "a4187764ec53d5a05de66c371c5410b18f1abeab98e3d5b843e5e4843ddfde97": {
      "address": "0x36583b089965896FCc2F39E9160211A18B80d1C1",
      "txHash": "0xe6c9ec37f8c19083d0d54942bdb91d860ddedad1a1e934e344b96c1a03f02e2b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_currentContentTokenId",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:20"
          },
          {
            "label": "transferCallback",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(FraktionTransferCallback)4935",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:23"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:26"
          },
          {
            "label": "_availableSupplies",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:29"
          },
          {
            "label": "_isSupplyAware",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FraktionTransferCallback)4935": {
            "label": "contract FraktionTransferCallback",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "35da3d7ee3a5562e7ca866de69646cb64e088bb129afb622c5f571ef534300ac": {
      "address": "0x1f9d1BC7dceB3016Aa06f78804fbef91BF36fd1B",
      "txHash": "0x31b405871f775ada63fa41e21c84b6e615ebe38abeb5b1d2f10c35f38d9902ff",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:40"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:22"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:27"
          },
          {
            "label": "contentIdToRefereeToReferer",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "ReferralPool",
            "src": "contracts/reward/pool/ReferralPool.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "adc56798337673fdec0afe069b82b70c9c80f482258aee285cb5b19034e50bbc": {
      "address": "0x4e9B0a520A9Ad2B3214Cd412e31882d50E64e4D6",
      "txHash": "0x8a67d1959c9d9a56e247d917379875cf8195fbb49578d08205710306931fa27f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:40"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:22"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:27"
          },
          {
            "label": "currentStateIndex",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:54"
          },
          {
            "label": "rewardStates",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_array(t_struct(RewardState)6071_storage)dyn_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:59"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)6078_storage))",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:64"
          },
          {
            "label": "userContentPools",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_struct(UintSet)4073_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardState)6071_storage)dyn_storage": {
            "label": "struct ContentPool.RewardState[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Participant)6078_storage)": {
            "label": "mapping(address => struct ContentPool.Participant)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)4073_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(RewardState)6071_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct ContentPool.RewardState[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)6078_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ContentPool.Participant))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Participant)6078_storage": {
            "label": "struct ContentPool.Participant",
            "members": [
              {
                "label": "shares",
                "type": "t_uint120",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStateClaim",
                "type": "t_uint96",
                "offset": 15,
                "slot": "0"
              },
              {
                "label": "lastStateIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardState)6071_storage": {
            "label": "struct ContentPool.RewardState",
            "members": [
              {
                "label": "totalShares",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentPoolReward",
                "type": "t_uint96",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "open",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3601_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4073_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3601_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint120": {
            "label": "uint120",
            "numberOfBytes": "15"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "c641ffdce9bf87209246596d08e2c9198baecd5f77bc6127c72213093e06695d": {
      "address": "0xA68F68D3e18180ED1bA730A844243D459aDf3287",
      "txHash": "0x000eaf9aff18d943a0f29d71d88b8551fc4807d59d8e30d95f100dcfe0c81da6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:40"
          },
          {
            "label": "_contentBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentBadges",
            "src": "contracts/reward/badges/ContentBadges.sol:16"
          },
          {
            "label": "_listenerBadges",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ListenerBadges",
            "src": "contracts/reward/badges/ListenerBadges.sol:16"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:22"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:27"
          },
          {
            "label": "tokenGenerationFactor",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:46"
          },
          {
            "label": "totalFrakMinted",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:51"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(FraktionTokens)8195",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:56"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "160",
            "type": "t_contract(FrakToken)7719",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:61"
          },
          {
            "label": "referralPool",
            "offset": 0,
            "slot": "161",
            "type": "t_contract(ReferralPool)7436",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:66"
          },
          {
            "label": "contentPool",
            "offset": 0,
            "slot": "162",
            "type": "t_contract(ContentPool)7114",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:71"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "163",
            "type": "t_address",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ContentPool)7114": {
            "label": "contract ContentPool",
            "numberOfBytes": "20"
          },
          "t_contract(FrakToken)7719": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)8195": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ReferralPool)7436": {
            "label": "contract ReferralPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "75ae1d684addab306f34cbea099dabe4934a976553dec9819f47a8c30e11a818": {
      "address": "0xa1258C001dd305511252E20F5da21ED6dd576cfD",
      "txHash": "0xa603fc9e95b6d501ad479c49b5a34e921f9d32eca6706e8f23c28bebc6f95b2e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "fractionBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint96)",
            "contract": "FractionCostBadges",
            "src": "contracts/minter/badges/FractionCostBadges.sol:16"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(FraktionTokens)8262",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:33"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(FrakToken)7779",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:38"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FrakToken)7779": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)8262": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint96)": {
            "label": "mapping(uint256 => uint96)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "ccf879f3944697bb4f32e2e1c2aba041c1be1e8392c1cff395511f1dfd270f16": {
      "address": "0xF8e66014Abee6ee2f40323741118A6BA43d959B7",
      "txHash": "0x57fa6ed75d27d3ba4e22c968032e7ef215acec95ef2a53a229c848242665e624",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:40"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint96",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:64"
          },
          {
            "label": "token",
            "offset": 12,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)1383",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:67"
          },
          {
            "label": "_idCounter",
            "offset": 0,
            "slot": "154",
            "type": "t_uint24",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:70"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Vesting)3771_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:73"
          },
          {
            "label": "owned",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(UintSet)2594_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1383": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)2594_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Vesting)3771_storage)": {
            "label": "mapping(uint256 => struct MultiVestingWallets.Vesting)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)2122_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)2594_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2122_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Vesting)3771_storage": {
            "label": "struct MultiVestingWallets.Vesting",
            "members": [
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "released",
                "type": "t_uint96",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "id",
                "type": "t_uint24",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "startDate",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "beneficiary",
                "type": "t_address",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "ce30ae62784a22a257581309aea7d82e28fc682f1b87d969204370e3e9096f01": {
      "address": "0xFb8B2811eE4d88eE7aC7877291D2516CF34E2Bea",
      "txHash": "0x7484e4d3b65b609a4d73759f3fa8c91530e627a7c6fa05cda7a09d75999919c6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:37"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:40"
          },
          {
            "label": "totalGroupCap",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "VestingWalletFactory",
            "src": "contracts/wallets/VestingWalletFactory.sol:33"
          },
          {
            "label": "multiVestingWallets",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(MultiVestingWallets)4745",
            "contract": "VestingWalletFactory",
            "src": "contracts/wallets/VestingWalletFactory.sol:38"
          },
          {
            "label": "vestingGroup",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint8,t_struct(VestingGroup)4775_storage)",
            "contract": "VestingWalletFactory",
            "src": "contracts/wallets/VestingWalletFactory.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(MultiVestingWallets)4745": {
            "label": "contract MultiVestingWallets",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(VestingGroup)4775_storage)": {
            "label": "mapping(uint8 => struct VestingWalletFactory.VestingGroup)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingGroup)4775_storage": {
            "label": "struct VestingWalletFactory.VestingGroup",
            "members": [
              {
                "label": "rewardCap",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supply",
                "type": "t_uint96",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "b9878b62b8844d3b56aba50d35011fd714c72247d812fee9b5317fdd558ea7f5": {
      "address": "0xE66Fa1C279A7DFAdf97Bf9F6458A66bC5f6865BC",
      "txHash": "0x635eeaee6d5edaa55402560d74723e08f8da794451d8d41bf5c13e11d12fd1c1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "totalFrakMinted",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "FrakTreasuryWallet",
            "src": "contracts/wallets/FrakTreasuryWallet.sol:26"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(FrakToken)7851",
            "contract": "FrakTreasuryWallet",
            "src": "contracts/wallets/FrakTreasuryWallet.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FrakToken)7851": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "616b6320ec5d93922f6a0fcfa2c8b0225423fe42d67cee25f106845de0cc0f30": {
      "address": "0x82404bA1a2F02fD1A8b2c3B7f434f1305eCC2dDf",
      "txHash": "0xcc72db7917dc39acccc0098e63d8291968d10ee7333b7ad6d3c2e4488c339485",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "_contentBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentBadges",
            "src": "contracts/reward/badges/ContentBadges.sol:16"
          },
          {
            "label": "_listenerBadges",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ListenerBadges",
            "src": "contracts/reward/badges/ListenerBadges.sol:16"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:23"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:28"
          },
          {
            "label": "tokenGenerationFactor",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:48"
          },
          {
            "label": "totalFrakMinted",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:53"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(FraktionTokens)7555",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:58"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "160",
            "type": "t_contract(FrakToken)7072",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:63"
          },
          {
            "label": "referralPool",
            "offset": 0,
            "slot": "161",
            "type": "t_contract(ReferralPool)6887",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:68"
          },
          {
            "label": "contentPool",
            "offset": 0,
            "slot": "162",
            "type": "t_contract(ContentPool)6557",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:73"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "163",
            "type": "t_address",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ContentPool)6557": {
            "label": "contract ContentPool",
            "numberOfBytes": "20"
          },
          "t_contract(FrakToken)7072": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)7555": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ReferralPool)6887": {
            "label": "contract ReferralPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4346bc30f834f4f510384c60b7212fd47900d9d185ef661e476425c30a832082": {
      "address": "0x6191964A1BD754c285482Fe299F148D31d384d6B",
      "txHash": "0xc6ffb9c02c764a09803f92c4fcf071c3d912a7054f3e8b1ca02e720a9a02aa12",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:23"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:28"
          },
          {
            "label": "currentStateIndex",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:55"
          },
          {
            "label": "rewardStates",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_array(t_struct(RewardState)6176_storage)dyn_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:60"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)6183_storage))",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:65"
          },
          {
            "label": "userContentPools",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_struct(UintSet)4073_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardState)6176_storage)dyn_storage": {
            "label": "struct ContentPool.RewardState[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Participant)6183_storage)": {
            "label": "mapping(address => struct ContentPool.Participant)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)4073_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(RewardState)6176_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct ContentPool.RewardState[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)6183_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ContentPool.Participant))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Participant)6183_storage": {
            "label": "struct ContentPool.Participant",
            "members": [
              {
                "label": "shares",
                "type": "t_uint120",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStateClaim",
                "type": "t_uint96",
                "offset": 15,
                "slot": "0"
              },
              {
                "label": "lastStateIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardState)6176_storage": {
            "label": "struct ContentPool.RewardState",
            "members": [
              {
                "label": "totalShares",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentPoolReward",
                "type": "t_uint96",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "open",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3601_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4073_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3601_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint120": {
            "label": "uint120",
            "numberOfBytes": "15"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f306cf6d908cf00ad7a2fbd5cfecfc7f4abad85d44e38b54278124ddb1841aa0": {
      "address": "0xb233eF9c56171c46a329c298e08962De1e692996",
      "txHash": "0xf537816e9e25d1c22405a3a589198fdbdd44b4556d8dedd4f1c0969def42e183",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:23"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:28"
          },
          {
            "label": "contentIdToRefereeToReferer",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "ReferralPool",
            "src": "contracts/reward/pool/ReferralPool.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd23f8a946bac978f20953a9f389c198c23a3b08004db55b3d88f195fbdb7abd": {
      "address": "0xA23303096B04C174ED8D9eE94c0b401939e1dD4c",
      "txHash": "0xa90d0cf4d36dace5176242afba1e442a93e02c6ad3f32fb30bc2a563ddfcbce3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "_contentBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentBadges",
            "src": "contracts/reward/badges/ContentBadges.sol:16"
          },
          {
            "label": "_listenerBadges",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ListenerBadges",
            "src": "contracts/reward/badges/ListenerBadges.sol:16"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:23"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:28"
          },
          {
            "label": "tokenGenerationFactor",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:48"
          },
          {
            "label": "totalFrakMinted",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:53"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(FraktionTokens)7737",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:58"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "160",
            "type": "t_contract(FrakToken)7146",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:63"
          },
          {
            "label": "referralPool",
            "offset": 0,
            "slot": "161",
            "type": "t_contract(ReferralPool)6961",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:68"
          },
          {
            "label": "contentPool",
            "offset": 0,
            "slot": "162",
            "type": "t_contract(ContentPool)6631",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:73"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "163",
            "type": "t_address",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ContentPool)6631": {
            "label": "contract ContentPool",
            "numberOfBytes": "20"
          },
          "t_contract(FrakToken)7146": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)7737": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ReferralPool)6961": {
            "label": "contract ReferralPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7f1e3302439d3dbabe8738f213f3b26c5b15aba5ef5f5b577f3b6bd7af61d774": {
      "address": "0x0140F67Dd0899C09D4B987332E7cC82BD3eAB3dC",
      "txHash": "0xc74cd93e3b649d7f75e27307a788fbe1081486e20c9ae709e60f7ef813f33acc",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint96",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:67"
          },
          {
            "label": "token",
            "offset": 12,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)771",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:70"
          },
          {
            "label": "_idCounter",
            "offset": 0,
            "slot": "154",
            "type": "t_uint24",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:73"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Vesting)2599_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:76"
          },
          {
            "label": "owned",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(UintSet)1957_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)771": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1957_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Vesting)2599_storage)": {
            "label": "mapping(uint256 => struct MultiVestingWallets.Vesting)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)1485_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1957_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1485_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Vesting)2599_storage": {
            "label": "struct MultiVestingWallets.Vesting",
            "members": [
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "released",
                "type": "t_uint96",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "id",
                "type": "t_uint24",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "startDate",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "beneficiary",
                "type": "t_address",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "e1e6562114ef7b178a8d549c5fb2fe81f49bebfeb60330e33abe490d8a4f3e61": {
      "address": "0xeE602aF9F2Ca2d6bCD70Ca3436B1d6d83d099b08",
      "txHash": "0x77d00ae9eddac00ef910ddd58e4ad953199ffdba3872047f73abe32f6bd7ed18",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:22"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:25"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint96",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:67"
          },
          {
            "label": "token",
            "offset": 12,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)771",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:70"
          },
          {
            "label": "_idCounter",
            "offset": 0,
            "slot": "154",
            "type": "t_uint24",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:73"
          },
          {
            "label": "vestings",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Vesting)2599_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:76"
          },
          {
            "label": "owned",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(UintSet)1957_storage)",
            "contract": "MultiVestingWallets",
            "src": "contracts/wallets/MultiVestingWallets.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)771": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)1957_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Vesting)2599_storage)": {
            "label": "mapping(uint256 => struct MultiVestingWallets.Vesting)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)1485_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)1957_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1485_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Vesting)2599_storage": {
            "label": "struct MultiVestingWallets.Vesting",
            "members": [
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "released",
                "type": "t_uint96",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "id",
                "type": "t_uint24",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "startDate",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "beneficiary",
                "type": "t_address",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "5aa37a8f064b2c11de5aa850e242a46b891151d793be16d68e2d1598b176e0f9": {
      "address": "0x8976a71af9B7B932225045FD5fbe5EbAD4c449d5",
      "txHash": "0xbb6a79f8f6f7ec6ad5067f276abb4c039f04ddb23c9fcf092fbe290ecbae0b41",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "fractionBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint96)",
            "contract": "FractionCostBadges",
            "src": "contracts/minter/badges/FractionCostBadges.sol:27"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(FraktionTokens)8442",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:38"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(FrakToken)7851",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:41"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FrakToken)7851": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)8442": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint96)": {
            "label": "mapping(uint256 => uint96)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "0b6d7f9040d6b2ddb4993cf7b47fd5395b5c3545ba61a0ee823392b0e1ee42e3": {
      "address": "0xf4d43d70E7F9E898D7D4627a0a2e89f1574e5794",
      "txHash": "0x45dfa8ba4a8acfc1b47d0bd4a1cd4da077efd6bdda45cab5f2e14d2ef84b6bba",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_currentContentTokenId",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:23"
          },
          {
            "label": "transferCallback",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(FraktionTransferCallback)5338",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:26"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:29"
          },
          {
            "label": "_availableSupplies",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:32"
          },
          {
            "label": "_isSupplyAware",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FraktionTransferCallback)5338": {
            "label": "contract FraktionTransferCallback",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0316db2c24f8ba9456bb71666c852bb962a5837c75592479e0c7c7404d63fa62": {
      "address": "0x0e4A0d487310f422D80709F6DF7895a5f2D81046",
      "txHash": "0xed99ccd5377dc9d6eaf063cf3678e9a64c50aa992e5d279134807b25aff86405",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:35"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:38"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2194",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:23"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:28"
          },
          {
            "label": "currentStateIndex",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:54"
          },
          {
            "label": "rewardStates",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_array(t_struct(RewardState)3612_storage)dyn_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:59"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)3619_storage))",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:64"
          },
          {
            "label": "userContentPools",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_struct(UintSet)3436_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardState)3612_storage)dyn_storage": {
            "label": "struct ContentPool.RewardState[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2194": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Participant)3619_storage)": {
            "label": "mapping(address => struct ContentPool.Participant)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3436_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(RewardState)3612_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct ContentPool.RewardState[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)3619_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ContentPool.Participant))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Participant)3619_storage": {
            "label": "struct ContentPool.Participant",
            "members": [
              {
                "label": "shares",
                "type": "t_uint120",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStateClaim",
                "type": "t_uint96",
                "offset": 15,
                "slot": "0"
              },
              {
                "label": "lastStateIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardState)3612_storage": {
            "label": "struct ContentPool.RewardState",
            "members": [
              {
                "label": "totalShares",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentPoolReward",
                "type": "t_uint96",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "open",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)2964_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3436_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2964_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint120": {
            "label": "uint120",
            "numberOfBytes": "15"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "66200d901919118c831b2bf3090b15bca8d1a91b7ff11431c26221d1bc9ed1f0": {
      "address": "0xDb41b31eB4ae66048261588FdE9497D8D1D7043f",
      "txHash": "0x9c6e59c8cfe73865cdc90c37cc9c2c217e3a7cbd10f13ee90dfafbfca604955a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "domainSeperator",
            "offset": 0,
            "slot": "203",
            "type": "t_bytes32",
            "contract": "EIP712Base",
            "src": "contracts/utils/EIP712Base.sol:19"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NativeMetaTransaction",
            "src": "contracts/utils/NativeMetaTransaction.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "08123869621e1b0b233f8f2c83605cbf29af067f3a1e87a1bef3a1755a2ada7f": {
      "address": "0xe74a1c4032b2BDDdC17569c00EfbC601E3823CEd",
      "txHash": "0x2d2c3550452c2f5d39345008cf6a72a0e4018341f3e2acb36ddd3ec39b0ef02b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_currentContentTokenId",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:62"
          },
          {
            "label": "transferCallback",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(FraktionTransferCallback)6951",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:65"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:68"
          },
          {
            "label": "_availableSupplies",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:71"
          },
          {
            "label": "_isSupplyAware",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "FraktionTokens",
            "src": "contracts/tokens/FraktionTokens.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FraktionTransferCallback)6951": {
            "label": "contract FraktionTransferCallback",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "17346c67c2160bb6cb92faf3c2969350960493dfcc1b90ec73e70d5cc9c3d9df": {
      "address": "0x42EBfeE4078fCA577363Cd9b84Ef83E7fB1f594E",
      "txHash": "0x48551db997dd4946346b2cffad15a078b22edf52340250d2e21fb08ebfe87781",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "totalFrakMinted",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "FrakTreasuryWallet",
            "src": "contracts/wallets/FrakTreasuryWallet.sol:61"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(FrakToken)1981",
            "contract": "FrakTreasuryWallet",
            "src": "contracts/wallets/FrakTreasuryWallet.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FrakToken)1981": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "90cd5a4ff2265c2decc5f3a9ea1aedabb8e9ab03d8d844b4860d2be6683cce9b": {
      "address": "0x58D90d53301eA18186Eff3d0D369597964f98D6b",
      "txHash": "0xd4634cb952713a0f6b533e328311b2e2aa58a569212f3571438542059ed19c5d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:50"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:53"
          },
          {
            "label": "currentStateIndex",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:105"
          },
          {
            "label": "rewardStates",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_array(t_struct(RewardState)4914_storage)dyn_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:108"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)4921_storage))",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:111"
          },
          {
            "label": "userContentPools",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_struct(UintSet)3756_storage)",
            "contract": "ContentPool",
            "src": "contracts/reward/pool/ContentPool.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardState)4914_storage)dyn_storage": {
            "label": "struct ContentPool.RewardState[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Participant)4921_storage)": {
            "label": "mapping(address => struct ContentPool.Participant)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3756_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(RewardState)4914_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct ContentPool.RewardState[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(Participant)4921_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ContentPool.Participant))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Participant)4921_storage": {
            "label": "struct ContentPool.Participant",
            "members": [
              {
                "label": "shares",
                "type": "t_uint120",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastStateClaim",
                "type": "t_uint96",
                "offset": 15,
                "slot": "0"
              },
              {
                "label": "lastStateIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardState)4914_storage": {
            "label": "struct ContentPool.RewardState",
            "members": [
              {
                "label": "totalShares",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currentPoolReward",
                "type": "t_uint96",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "open",
                "type": "t_bool",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)3284_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3756_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3284_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint120": {
            "label": "uint120",
            "numberOfBytes": "15"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f0551f4a8edb65225bd0da0e65ee7aa138eb5dfadb7b76171e0779a7cdbf695d": {
      "address": "0xE60922C71a0D37Cbfe645cDeB533c514809A58D4",
      "txHash": "0x786250deab3184bd66f38e58e6d5de46a35403eb44d1fad9a2bcaaa0fc433c32",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "_contentBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContentBadges",
            "src": "contracts/reward/badges/ContentBadges.sol:23"
          },
          {
            "label": "_listenerBadges",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ListenerBadges",
            "src": "contracts/reward/badges/ListenerBadges.sol:23"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Upgradeable)2806",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:50"
          },
          {
            "label": "_pendingRewards",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PushPullReward",
            "src": "contracts/utils/PushPullReward.sol:53"
          },
          {
            "label": "tokenGenerationFactor",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:93"
          },
          {
            "label": "totalFrakMinted",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:96"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(FraktionTokens)6933",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:99"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "160",
            "type": "t_contract(FrakToken)6573",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:105"
          },
          {
            "label": "referralPool",
            "offset": 0,
            "slot": "161",
            "type": "t_contract(ReferralPool)6386",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:108"
          },
          {
            "label": "contentPool",
            "offset": 0,
            "slot": "162",
            "type": "t_contract(ContentPool)6056",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:111"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "163",
            "type": "t_address",
            "contract": "Rewarder",
            "src": "contracts/reward/Rewarder.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ContentPool)6056": {
            "label": "contract ContentPool",
            "numberOfBytes": "20"
          },
          "t_contract(FrakToken)6573": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)6933": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)2806": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ReferralPool)6386": {
            "label": "contract ReferralPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b5f83a18d812f9d0db151f46ced901d8e5bdee072bf52661609270b0646f70e": {
      "address": "0x9164F9d3F9Be982d394cc6fa344888C3b7771667",
      "txHash": "0x536d25deef8af414ff24c96d8048d7df26a8b207dc866e81bd580041b5643ea9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "fractionBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint96)",
            "contract": "FractionCostBadges",
            "src": "contracts/minter/badges/FractionCostBadges.sol:35"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(FraktionTokens)4376",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:77"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(FrakToken)4016",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:80"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FrakToken)4016": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)4376": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint96)": {
            "label": "mapping(uint256 => uint96)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "7dc20deef596a080469df84508e9cc6dd0bfe60e51e3ad9b2214e5c4d93a7161": {
      "address": "0x3b4f4511f243E44D532C6fa232C310E7b16B30d3",
      "txHash": "0x11aee32fec391e5e245fc392fb4139af31de6ee6e81c5b414252ef4123c0986b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:56"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "FrakAccessControlUpgradeable",
            "src": "contracts/utils/FrakAccessControlUpgradeable.sol:59"
          },
          {
            "label": "fractionBadges",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint96)",
            "contract": "FractionCostBadges",
            "src": "contracts/minter/badges/FractionCostBadges.sol:35"
          },
          {
            "label": "fraktionTokens",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(FraktionTokens)4376",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:77"
          },
          {
            "label": "frakToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(FrakToken)4016",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:80"
          },
          {
            "label": "foundationWallet",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Minter",
            "src": "contracts/minter/Minter.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(FrakToken)4016": {
            "label": "contract FrakToken",
            "numberOfBytes": "20"
          },
          "t_contract(FraktionTokens)4376": {
            "label": "contract FraktionTokens",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint96)": {
            "label": "mapping(uint256 => uint96)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
