name: 🧪 Smart contract tests

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]

# cancel previous runs on the same PR
concurrency:
  group: ${{ github.ref }}-tests
  cancel-in-progress: true

# ll the env required for hardhat
env:
  MUMBAI_PROVIDER: ${{ secrets.MUMBAI_PROVIDER }}
  GOERLI_PROVIDER: ${{ secrets.GOERLI_PROVIDER }}
  POLYGON_PROVIDER: ${{ secrets.POLYGON_PROVIDER }}
  FRAK_DEPLOY_PRIV_KEY: ${{ secrets.SYBEL_DEPLOY_PRIVATE_KEY }}
  POLYGON_SCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
  ETHER_SCAN_API_KEY: ${{ secrets.ETHER_SCAN_API_KEY }}
  COIN_MARKET_CAP_API_KEY: ${{ secrets.COIN_MARKET_CAP_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: '🔨 Setup pnpm'
        uses: pnpm/action-setup@v2
      
      - name: '🔨 Setup Node.js'
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: '🔨 Install dependencies'
        run: pnpm install --frozen-lockfile
    
      - name: '🔨 Install Foundry'
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      
      - name: '💾 Foundry fork cache'
        uses: actions/cache@v3
        with:
          path: "~/.foundry/cache"
          key: foundry-${{ hashFiles('Makefile', 'foundry.toml') }} # where fork block numbers & RPC are stored
      
      - name: '💾 Foundry compilation cache'
        uses: actions/cache@v3
        with:
          path: |
            cache
            out
          key: ${{ github.base_ref || github.ref_name }}-foundry
          
      - name: '📦️ Build contracts'
        run: forge clean && forge build 
          
      - name: '🧪 Run storage tests'
        run: pnpm run test:storage 
          
      - name: '🧪 Run forge tests'
        run: forge test --gas-report > gasreport.ansi 

      - name: '📈 Compare gas reports'
        uses: Rubilmax/foundry-gas-diff@v3.15
        with:
          summaryQuantile: 0.9 # only display the 10% most significant gas diffs in the summary (defaults to 20%)
          ignore: test/**/*
          header: |
            # Frak gas diffs
        id: gas_diff

      - name: '📝 Add gas diff to sticky comment'
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          # delete the comment in case changes no longer impact gas costs
          delete: ${{ !steps.gas_diff.outputs.markdown }}
          message: ${{ steps.gas_diff.outputs.markdown }}

      - name: '📈 Run snapshot'
        run: forge snapshot
