name: ⛷ Smart contract tests

on:
  push:
    branches: ["main"]
  pull_request:

env:
  MUMBAI_PROVIDER: ${{ secrets.MUMBAI_PROVIDER }}
  GOERLI_PROVIDER: ${{ secrets.GOERLI_PROVIDER }}
  POLYGON_PROVIDER: ${{ secrets.POLYGON_PROVIDER }}
  FRAK_DEPLOY_PRIV_KEY: ${{ secrets.SYBEL_DEPLOY_PRIVATE_KEY }}
  POLYGON_SCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
  ETHER_SCAN_API_KEY: ${{ secrets.ETHER_SCAN_API_KEY }}
  COIN_MARKET_CAP_API_KEY: ${{ secrets.COIN_MARKET_CAP_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: '🔨 Checkout'
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: '🔨 Install node'
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: '💾 Cache node modules'
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: '🔨 Install dependencies'
        run: npm i
    
      - name: '🔨 Install Foundry'
        uses: foundry-rs/foundry-toolchain@v1

      - name: '🧪 Run tests'
        run: forge test --gas-report > gasreport.ansi 
        env:
          # make fuzzing semi-deterministic to avoid noisy gas cost estimation
          # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

      - name: '📈 Compare gas reports'
        uses: Rubilmax/foundry-gas-diff@v3.15
        with:
          summaryQuantile: 0.9 # only display the 10% most significant gas diffs in the summary (defaults to 20%)
          sortCriteria: avg,max # sort diff rows by criteria
          sortOrders: desc,asc # and directions
        id: gas_diff

      - name: '📝 Add gas diff to sticky comment'
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          # delete the comment in case changes no longer impact gas costs
          delete: ${{ !steps.gas_diff.outputs.markdown }}
          message: ${{ steps.gas_diff.outputs.markdown }}

      - name: '📈 Run snapshot'
        run: forge snapshot
