[profile.default]
src = 'contracts'
out = 'out'
libs = ['lib']
test = 'test'
cache_path = 'forge-cache'
# extra_output = ["ir", "irOptimized"]
# extra_output = ["irOptimized"]

# Remove bytecode hash at the end of compiled bytecode
bytecode_hash = "none"

# Allow read/write permission on current path
fs_permissions = [{ access = "read-write", path = "./" }]

# For OZ upgrades checks
build_info = true
extra_output = ["storageLayout"]

# Optimizer config
optimizer = true
optimizer_runs = 100_000
via-ir = false

[profile.default.optimizer_details]
constantOptimizer = true
yul = true

# Fuzzing config
[fuzz]
runs = 2048
max_test_rejects = 65536
seed = '0xacab'
dictionary_weight = 40
include_storage = true
include_push_bytes = true

# Invariant config
[invariant]
runs = 256
depth = 15
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true

# Config for deployment
[rpc_endpoints]
goerli = "${GOERLI_RPC_URL}"
mumbai = "${MUMBAI_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"

# Config for verification
[etherscan]
mumbai = { key = "${POLYGON_SCAN_API_KEY}", url = "https://api-testnet.polygonscan.com/api" }
polygon = { key = "${POLYGON_SCAN_API_KEY}", url = "https://api.polygonscan.com/api" }
goerli = { key = "${ETHERSCAN_SCAN_API_KEY}", url = "https://api-goerli.etherscan.io/api" }
mainnet = { key = "${ETHERSCAN_SCAN_API_KEY}" }
