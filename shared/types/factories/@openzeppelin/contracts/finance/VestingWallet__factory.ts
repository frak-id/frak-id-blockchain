/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VestingWallet,
  VestingWalletInterface,
} from "../../../../@openzeppelin/contracts/finance/VestingWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001496380380620014968339818101604052810190620000379190620001cd565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a090620002b0565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508167ffffffffffffffff1660a08167ffffffffffffffff16815250508067ffffffffffffffff1660c08167ffffffffffffffff1681525050505050620002d2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001508262000123565b9050919050565b620001628162000143565b81146200016e57600080fd5b50565b600081519050620001828162000157565b92915050565b600067ffffffffffffffff82169050919050565b620001a78162000188565b8114620001b357600080fd5b50565b600081519050620001c7816200019c565b92915050565b600080600060608486031215620001e957620001e86200011e565b5b6000620001f98682870162000171565b93505060206200020c86828701620001b6565b92505060406200021f86828701620001b6565b9150509250925092565b600082825260208201905092915050565b7f56657374696e6757616c6c65743a2062656e6566696369617279206973207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b600062000298602a8362000229565b9150620002a5826200023a565b604082019050919050565b60006020820190508181036000830152620002cb8162000289565b9050919050565b60805160a05160c0516111946200030260003960006102620152600061050b0152600061036f01526111946000f3fe60806040526004361061008a5760003560e01c8063810ec23b11610059578063810ec23b1461015257806386d1a69f1461018f57806396132521146101a65780639852595c146101d1578063be9a65551461020e57610091565b80630a17b06b146100965780630fb5a6b4146100d357806319165587146100fe57806338af3eed1461012757610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610a0f565b610239565b6040516100ca9190610a55565b60405180910390f35b3480156100df57600080fd5b506100e861025e565b6040516100f59190610a55565b60405180910390f35b34801561010a57600080fd5b5061012560048036038101906101209190610ace565b610290565b005b34801561013357600080fd5b5061013c61036b565b6040516101499190610b0a565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610b25565b610393565b6040516101869190610a55565b60405180910390f35b34801561019b57600080fd5b506101a4610433565b005b3480156101b257600080fd5b506101bb6104b5565b6040516101c89190610a55565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f39190610ace565b6104be565b6040516102059190610a55565b60405180910390f35b34801561021a57600080fd5b50610223610507565b6040516102309190610a55565b60405180910390f35b60006102576102466104b5565b476102519190610b94565b83610539565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b600061029b826104be565b6102a58342610393565b6102af9190610bc8565b905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103009190610b94565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b8260405161034d9190610a55565b60405180910390a26103678261036161036b565b836105d3565b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061042b6103a1846104be565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103da9190610b0a565b602060405180830381865afa1580156103f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041b9190610c28565b6104259190610b94565b83610539565b905092915050565b600061043d6104b5565b61044642610239565b6104509190610bc8565b9050806000808282546104639190610b94565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516104999190610a55565b60405180910390a16104b26104ac61036b565b82610659565b50565b60008054905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610543610507565b8267ffffffffffffffff16101561055d57600090506105cd565b61056561025e565b61056d610507565b6105779190610b94565b8267ffffffffffffffff161115610590578290506105cd565b61059861025e565b6105a0610507565b8367ffffffffffffffff166105b59190610bc8565b846105c09190610c55565b6105ca9190610cc6565b90505b92915050565b6106548363a9059cbb60e01b84846040516024016105f2929190610cf7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061074d565b505050565b8047101561069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390610d7d565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516106c290610dce565b60006040518083038185875af1925050503d80600081146106ff576040519150601f19603f3d011682016040523d82523d6000602084013e610704565b606091505b5050905080610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f90610e55565b60405180910390fd5b505050565b60006107af826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108149092919063ffffffff16565b905060008151111561080f57808060200190518101906107cf9190610ead565b61080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590610f4c565b60405180910390fd5b5b505050565b6060610823848460008561082c565b90509392505050565b606082471015610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890610fde565b60405180910390fd5b61087a85610940565b6108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061104a565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108e291906110d0565b60006040518083038185875af1925050503d806000811461091f576040519150601f19603f3d011682016040523d82523d6000602084013e610924565b606091505b5091509150610934828286610963565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610973578290506109c3565b6000835111156109865782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba919061113c565b60405180910390fd5b9392505050565b600080fd5b600067ffffffffffffffff82169050919050565b6109ec816109cf565b81146109f757600080fd5b50565b600081359050610a09816109e3565b92915050565b600060208284031215610a2557610a246109ca565b5b6000610a33848285016109fa565b91505092915050565b6000819050919050565b610a4f81610a3c565b82525050565b6000602082019050610a6a6000830184610a46565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9b82610a70565b9050919050565b610aab81610a90565b8114610ab657600080fd5b50565b600081359050610ac881610aa2565b92915050565b600060208284031215610ae457610ae36109ca565b5b6000610af284828501610ab9565b91505092915050565b610b0481610a90565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b60008060408385031215610b3c57610b3b6109ca565b5b6000610b4a85828601610ab9565b9250506020610b5b858286016109fa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9f82610a3c565b9150610baa83610a3c565b9250828201905080821115610bc257610bc1610b65565b5b92915050565b6000610bd382610a3c565b9150610bde83610a3c565b9250828203905081811115610bf657610bf5610b65565b5b92915050565b610c0581610a3c565b8114610c1057600080fd5b50565b600081519050610c2281610bfc565b92915050565b600060208284031215610c3e57610c3d6109ca565b5b6000610c4c84828501610c13565b91505092915050565b6000610c6082610a3c565b9150610c6b83610a3c565b9250828202610c7981610a3c565b91508282048414831517610c9057610c8f610b65565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cd182610a3c565b9150610cdc83610a3c565b925082610cec57610ceb610c97565b5b828204905092915050565b6000604082019050610d0c6000830185610afb565b610d196020830184610a46565b9392505050565b600082825260208201905092915050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000610d67601d83610d20565b9150610d7282610d31565b602082019050919050565b60006020820190508181036000830152610d9681610d5a565b9050919050565b600081905092915050565b50565b6000610db8600083610d9d565b9150610dc382610da8565b600082019050919050565b6000610dd982610dab565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b6000610e3f603a83610d20565b9150610e4a82610de3565b604082019050919050565b60006020820190508181036000830152610e6e81610e32565b9050919050565b60008115159050919050565b610e8a81610e75565b8114610e9557600080fd5b50565b600081519050610ea781610e81565b92915050565b600060208284031215610ec357610ec26109ca565b5b6000610ed184828501610e98565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610f36602a83610d20565b9150610f4182610eda565b604082019050919050565b60006020820190508181036000830152610f6581610f29565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610fc8602683610d20565b9150610fd382610f6c565b604082019050919050565b60006020820190508181036000830152610ff781610fbb565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611034601d83610d20565b915061103f82610ffe565b602082019050919050565b6000602082019050818103600083015261106381611027565b9050919050565b600081519050919050565b60005b83811015611093578082015181840152602081019050611078565b60008484015250505050565b60006110aa8261106a565b6110b48185610d9d565b93506110c4818560208601611075565b80840191505092915050565b60006110dc828461109f565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b600061110e826110e7565b6111188185610d20565b9350611128818560208601611075565b611131816110f2565b840191505092915050565b600060208201905081810360008301526111568184611103565b90509291505056fea26469706673582212208e93177a6fd1dcd5a16a8b3da6f44d565c909778a9319e3fc466c8be138e6d3e64736f6c63430008110033";

type VestingWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingWallet__factory extends ContractFactory {
  constructor(...args: VestingWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    beneficiaryAddress: PromiseOrValue<string>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VestingWallet> {
    return super.deploy(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<VestingWallet>;
  }
  override getDeployTransaction(
    beneficiaryAddress: PromiseOrValue<string>,
    startTimestamp: PromiseOrValue<BigNumberish>,
    durationSeconds: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  override attach(address: string): VestingWallet {
    return super.attach(address) as VestingWallet;
  }
  override connect(signer: Signer): VestingWallet__factory {
    return super.connect(signer) as VestingWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingWalletInterface {
    return new utils.Interface(_abi) as VestingWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingWallet {
    return new Contract(address, _abi, signerOrProvider) as VestingWallet;
  }
}
