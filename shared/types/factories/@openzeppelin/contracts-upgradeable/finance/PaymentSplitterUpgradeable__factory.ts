/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PaymentSplitterUpgradeable,
  PaymentSplitterUpgradeableInterface,
} from "../../../../@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20PaymentReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611845806100206000396000f3fe6080604052600436106100a05760003560e01c80639852595c116100645780639852595c146101e3578063a3f8eace14610220578063c45ac0501461025d578063ce7c2ac21461029a578063d79779b2146102d7578063e33b7de314610314576100e7565b806319165587146100ec5780633a98ef3914610115578063406072a91461014057806348b750441461017d5780638b83209b146101a6576100e7565b366100e7577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be7706100ce61033f565b346040516100dd929190610e4f565b60405180910390a1005b600080fd5b3480156100f857600080fd5b50610113600480360381019061010e9190610ebb565b610347565b005b34801561012157600080fd5b5061012a6104c6565b6040516101379190610ee8565b60405180910390f35b34801561014c57600080fd5b5061016760048036038101906101629190610f6d565b6104d0565b6040516101749190610ee8565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f9190610f6d565b610557565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190610fd9565b61076a565b6040516101da9190611006565b60405180910390f35b3480156101ef57600080fd5b5061020a60048036038101906102059190611021565b6107b2565b6040516102179190610ee8565b60405180910390f35b34801561022c57600080fd5b5061024760048036038101906102429190611021565b6107fb565b6040516102549190610ee8565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190610f6d565b61082e565b6040516102919190610ee8565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190611021565b6108dd565b6040516102ce9190610ee8565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f9919061104e565b610926565b60405161030b9190610ee8565b60405180910390f35b34801561032057600080fd5b5061032961096f565b6040516103369190610ee8565b60405180910390f35b600033905090565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c0906110fe565b60405180910390fd5b60006103d4826107fb565b905060008103610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041090611190565b60405180910390fd5b806034600082825461042b91906111df565b9250508190555080603660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506104898282610979565b7fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b05682826040516104ba929190611272565b60405180910390a15050565b6000603354905090565b6000603960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d0906110fe565b60405180910390fd5b60006105e5838361082e565b90506000810361062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190611190565b60405180910390fd5b80603860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461067991906111df565b9250508190555080603960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550610715838383610a6d565b8273ffffffffffffffffffffffffffffffffffffffff167f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a838360405161075d929190610e4f565b60405180910390a2505050565b6000603782815481106107805761077f61129b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000603660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061080661096f565b4761081191906111df565b90506108268382610821866107b2565b610af3565b915050919050565b60008061083a84610926565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108739190611006565b602060405180830381865afa158015610890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b491906112df565b6108be91906111df565b90506108d483826108cf87876104d0565b610af3565b91505092915050565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000603860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000603454905090565b804710156109bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b390611358565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109e2906113a9565b60006040518083038185875af1925050503d8060008114610a1f576040519150601f19603f3d011682016040523d82523d6000602084013e610a24565b606091505b5050905080610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f90611430565b60405180910390fd5b505050565b610aee8363a9059cbb60e01b8484604051602401610a8c929190610e4f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b61565b505050565b600081603354603560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610b449190611450565b610b4e91906114c1565b610b5891906114f2565b90509392505050565b6000610bc3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c289092919063ffffffff16565b9050600081511115610c235780806020019051810190610be3919061155e565b610c22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c19906115fd565b60405180910390fd5b5b505050565b6060610c378484600085610c40565b90509392505050565b606082471015610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c9061168f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610cae9190611715565b60006040518083038185875af1925050503d8060008114610ceb576040519150601f19603f3d011682016040523d82523d6000602084013e610cf0565b606091505b5091509150610d0187838387610d0d565b92505050949350505050565b60608315610d6f576000835103610d6757610d2785610d82565b610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d90611778565b60405180910390fd5b5b829050610d7a565b610d798383610da5565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610db85781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dec91906117ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2082610df5565b9050919050565b610e3081610e15565b82525050565b6000819050919050565b610e4981610e36565b82525050565b6000604082019050610e646000830185610e27565b610e716020830184610e40565b9392505050565b600080fd5b6000610e8882610df5565b9050919050565b610e9881610e7d565b8114610ea357600080fd5b50565b600081359050610eb581610e8f565b92915050565b600060208284031215610ed157610ed0610e78565b5b6000610edf84828501610ea6565b91505092915050565b6000602082019050610efd6000830184610e40565b92915050565b6000610f0e82610e15565b9050919050565b610f1e81610f03565b8114610f2957600080fd5b50565b600081359050610f3b81610f15565b92915050565b610f4a81610e15565b8114610f5557600080fd5b50565b600081359050610f6781610f41565b92915050565b60008060408385031215610f8457610f83610e78565b5b6000610f9285828601610f2c565b9250506020610fa385828601610f58565b9150509250929050565b610fb681610e36565b8114610fc157600080fd5b50565b600081359050610fd381610fad565b92915050565b600060208284031215610fef57610fee610e78565b5b6000610ffd84828501610fc4565b91505092915050565b600060208201905061101b6000830184610e27565b92915050565b60006020828403121561103757611036610e78565b5b600061104584828501610f58565b91505092915050565b60006020828403121561106457611063610e78565b5b600061107284828501610f2c565b91505092915050565b600082825260208201905092915050565b7f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060008201527f7368617265730000000000000000000000000000000000000000000000000000602082015250565b60006110e860268361107b565b91506110f38261108c565b604082019050919050565b60006020820190508181036000830152611117816110db565b9050919050565b7f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060008201527f647565207061796d656e74000000000000000000000000000000000000000000602082015250565b600061117a602b8361107b565b91506111858261111e565b604082019050919050565b600060208201905081810360008301526111a98161116d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111ea82610e36565b91506111f583610e36565b925082820190508082111561120d5761120c6111b0565b5b92915050565b6000819050919050565b600061123861123361122e84610df5565b611213565b610df5565b9050919050565b600061124a8261121d565b9050919050565b600061125c8261123f565b9050919050565b61126c81611251565b82525050565b60006040820190506112876000830185611263565b6112946020830184610e40565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815190506112d981610fad565b92915050565b6000602082840312156112f5576112f4610e78565b5b6000611303848285016112ca565b91505092915050565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b6000611342601d8361107b565b915061134d8261130c565b602082019050919050565b6000602082019050818103600083015261137181611335565b9050919050565b600081905092915050565b50565b6000611393600083611378565b915061139e82611383565b600082019050919050565b60006113b482611386565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b600061141a603a8361107b565b9150611425826113be565b604082019050919050565b600060208201905081810360008301526114498161140d565b9050919050565b600061145b82610e36565b915061146683610e36565b925082820261147481610e36565b9150828204841483151761148b5761148a6111b0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114cc82610e36565b91506114d783610e36565b9250826114e7576114e6611492565b5b828204905092915050565b60006114fd82610e36565b915061150883610e36565b92508282039050818111156115205761151f6111b0565b5b92915050565b60008115159050919050565b61153b81611526565b811461154657600080fd5b50565b60008151905061155881611532565b92915050565b60006020828403121561157457611573610e78565b5b600061158284828501611549565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006115e7602a8361107b565b91506115f28261158b565b604082019050919050565b60006020820190508181036000830152611616816115da565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061167960268361107b565b91506116848261161d565b604082019050919050565b600060208201905081810360008301526116a88161166c565b9050919050565b600081519050919050565b60005b838110156116d85780820151818401526020810190506116bd565b60008484015250505050565b60006116ef826116af565b6116f98185611378565b93506117098185602086016116ba565b80840191505092915050565b600061172182846116e4565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611762601d8361107b565b915061176d8261172c565b602082019050919050565b6000602082019050818103600083015261179181611755565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006117bf82611798565b6117c9818561107b565b93506117d98185602086016116ba565b6117e2816117a3565b840191505092915050565b6000602082019050818103600083015261180781846117b4565b90509291505056fea264697066735822122024c2d6f54a86a77041e92a7a9930c3e1eb01b59e46bd0ac3dd46dcd2b02e1a4b64736f6c63430008110033";

type PaymentSplitterUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentSplitterUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentSplitterUpgradeable__factory extends ContractFactory {
  constructor(...args: PaymentSplitterUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentSplitterUpgradeable> {
    return super.deploy(overrides || {}) as Promise<PaymentSplitterUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentSplitterUpgradeable {
    return super.attach(address) as PaymentSplitterUpgradeable;
  }
  override connect(signer: Signer): PaymentSplitterUpgradeable__factory {
    return super.connect(signer) as PaymentSplitterUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentSplitterUpgradeableInterface {
    return new utils.Interface(_abi) as PaymentSplitterUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentSplitterUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PaymentSplitterUpgradeable;
  }
}
